[{"path":"https://camhowitt.github.io/shinyLottie/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Cameron Howitt Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/articles/Controlling-Animations.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Controlling Animations","text":"‘Lottie’ offers several methods controlling various aspects animations, ‘shinyLottie’ provides options calling methods initialising animation updating later point. table documents common methods: demonstrate , example initialises animation using lottie_animation() speed value 2, causing animation play twice fast normal. can use reactive event, triggered clicking button, update speed value 0.5 (causing play twice slow normal) using lottie_setSpeed(). Note calling lottie_setSpeed(), reference name animation wish target (case, \"my_animation\"). consistent across virtually ‘shinyLottie’ functions, allowing fine control animations ‘shiny’ app (.e. able update speed single animation, rather animations). Alternatively, default default name value \"\" can used target animations app. Finally, want call ‘Lottie’ method ‘shinyLottie’ provide function , can achieved using lottie_callMethod().","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\",     speed = 2   ),   actionButton(\"updateSpeed\", \"Set Speed to 0.5\") )  server <- function(input, output, session) {   observeEvent(input$updateSpeed, {     lottie_setSpeed(speed = 0.5, name = \"my_animation\")   }) }  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/Controlling-Animations.html","id":"properties","dir":"Articles","previous_headings":"","what":"Properties","title":"Controlling Animations","text":"‘Lottie’ animations number properties can queried runtime. example demonstrates query ‘playCount’ property animation using lottie_getProperty().","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"getProperty\", \"Update Play Count\"),   textOutput(\"playCountOutput\") )  server <- function(input, output, session) {   observeEvent(input$getProperty, {     lottie_getProperty(name = \"my_animation\", property = \"playCount\")   })    observe({     req(input$playCount)     output$playCountOutput <- renderText({       paste(\"Play Count:\", input$playCount)     })   }) }   shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/Event-Listeners.html","id":"adding-event-listeners","dir":"Articles","previous_headings":"","what":"Adding Event Listeners","title":"Event Listeners","text":"Event listeners provide way introducing interactivity ‘Lottie’ animations; example, event trigger mouse animation animation completes. However, choosing right event requires understanding whether targeting animation container, animation .","code":""},{"path":"https://camhowitt.github.io/shinyLottie/articles/Event-Listeners.html","id":"target-the-container","dir":"Articles","previous_headings":"Adding Event Listeners","what":"Target the Container","title":"Event Listeners","text":"animation’s container either: div element produced using lottie_animation() button element passing animation lottie_button() cases, adding event listener, use standard HTML DOM events, documented . example demonstrates common use case , use two event listeners (one ‘mouseenter’ event another ‘mouseleave’ event), can cause animation play user hovers mouse button.","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\",     width = \"200px\",     height = \"100px\",     loop = TRUE,     autoplay = FALSE,   ) |> lottie_button(inputId = \"lottieButton\", label = \"Lottie\") |>     lottie_addEventListener(\"mouseenter\", \"container\", state = \"play\") |>     lottie_addEventListener(\"mouseleave\", \"container\", state = \"pause\") )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/Event-Listeners.html","id":"target-the-animation","dir":"Articles","previous_headings":"Adding Event Listeners","what":"Target the Animation","title":"Event Listeners","text":"events specific ‘Lottie’ animations, documented . generally track internal state animation (.e. animation reached certain frame completed). example demonstrates simple use case ‘onComplete’ event execute arbitrary ‘JavaScript’ snippet print message browser’s console.","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) |>    lottie_addEventListener(     event = \"loopComplete\",      target = \"animation\",     custom_js = \"console.log('Animation Complete!');\"   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/Event-Listeners.html","id":"removing-event-listeners","dir":"Articles","previous_headings":"","what":"Removing Event Listeners","title":"Event Listeners","text":"’s also possible disable interactivity using lottie_removeEventListener() remove event listener. Similar lottie_addEventListener(), must supply animation name, event type, target. example , initialise ‘Lottie’ animation event listener assign current ‘playCount’ value ‘shiny’ input value (input$playCount). use observeEvent(), notification displayed time input value updated. continue user clicks ‘Remove Event Listener’ button triggers call lottie_removeEventListener(), causing input value longer update, therefore ceasing notifications.","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   # Create an 'animation' event that updates the 'playCount' input value   # value after each loop   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) |>    lottie_addEventListener(     event = \"loopComplete\",      target = \"animation\",     custom_js = \"Shiny.setInputValue('playCount',       lottieInstances.my_animation.playCount, {priority: 'event'});\"   ),   actionButton(\"removeEventListener\", \"Remove Event Listener\") )  server <- function(input, output, session) {   # Notifications demonstrate that eventListener is active   observeEvent(input$playCount, {     showNotification(paste(\"Animation played\", input$playCount, \"times\"), duration = 1)   })    # Removing the event listener ceases the notifications   observeEvent(input$removeEventListener, {     lottie_removeEventListener(name = \"my_animation\", event = \"loopComplete\",                                target = \"animation\")   }) }  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/shinyLottie.html","id":"animations","dir":"Articles","previous_headings":"","what":"Animations","title":"shinyLottie","text":"following example demonstrates produce simple ‘shiny’ app includes ‘Lottie’ animation. relies use two functions within UI: include_lottie() loads necessary ‘JavaScript’ enable ‘Lottie’ functionality lottie_animation() generates ‘Lottie’ animation sourced supplied path argument two types path can used reference ‘Lottie’ animation: local file path JSON file - path used app references example animation installed alongside ‘shinyLottie’ URL web-hosted JSON files (.e. LottieFiles asset link LottieLab JSON URL) lottie_animation() also requires provide name, can reference updating animation ‘shiny’ runtime. process, along arguments can supplied fine-tune playback behaviour, explained vignette(\"Controlling-Animations\").","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/articles/shinyLottie.html","id":"buttons","dir":"Articles","previous_headings":"","what":"Buttons","title":"shinyLottie","text":"lottie_button() makes simple convert ‘Lottie’ animations functional buttons. simplest way pipe output lottie_animation() (can done either R’s native |> magrittr’s %>%). Along animation object, must also provide lottie_button() inputId. makes functionally identical actionButton() - can observe ‘shiny’ input slot name (case input$my_button) trigger reactive behaviour. , simple message printed console.","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\",     height = \"100px\",     width = \"100px\"   ) |> lottie_button(inputId = \"my_button\") )  server <- function(input, output, session) {   observeEvent(input$my_button, {     print(\"Button pressed\")   }) }  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cameron Howitt. Author, maintainer, copyright holder.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Howitt C (2024). shinyLottie: Seamlessly Integrate 'Lottie' Animations 'shiny' Applications. R package version 1.0.0, https://camhowitt.github.io/shinyLottie/.","code":"@Manual{,   title = {shinyLottie: Seamlessly Integrate 'Lottie' Animations into 'shiny' Applications},   author = {Cameron Howitt},   year = {2024},   note = {R package version 1.0.0},   url = {https://camhowitt.github.io/shinyLottie/}, }"},{"path":"https://camhowitt.github.io/shinyLottie/index.html","id":"shinylottie","dir":"","previous_headings":"","what":"Seamlessly Integrate Lottie Animations into shiny Applications","title":"Seamlessly Integrate Lottie Animations into shiny Applications","text":"‘shinyLottie’ package allows users easily integrate control ‘Lottie’ animations within ‘shiny’ applications, without need idiosyncratic expression use ‘JavaScript’. includes utilities generating animation instances, controlling playback, manipulating animation properties, .","code":""},{"path":"https://camhowitt.github.io/shinyLottie/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Seamlessly Integrate Lottie Animations into shiny Applications","text":"can install released version `shinyLottie` CRAN :","code":"install.packages(\"shinyLottie\")"},{"path":"https://camhowitt.github.io/shinyLottie/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Seamlessly Integrate Lottie Animations into shiny Applications","text":"Introducing ‘Lottie’ animations ‘shiny’ app can accomplished using just two ‘shinyLottie’ functions: advanced implementations, please refer following articles: vignette(\"shinyLottie\") vignette(\"Controlling-Animations\") vignette(\"Event-Listeners\")","code":"library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":null,"dir":"Reference","previous_headings":"","what":"Include 'Lottie' Functionality within 'shiny' — include_lottie","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"Responsible retrieving 'Lottie' library initialising necessary 'JavaScript' library. , function must included within UI object shinyApp order enable 'shinyLottie' functionality.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"","code":"include_lottie(version = \"5.12.2\")"},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"version character string specifying version 'Lottie' library source via CDN.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"list HTML tags included within head element 'shiny' application.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"Calling function initialises global object \"window.lottieInstances\" DOM content fully loaded. used store 'Lottie' animations created using lottie_animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/include_lottie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Include 'Lottie' Functionality within 'shiny' — include_lottie","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) )  server <- function(input, output, session) {}  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"Adds event listener 'Lottie' animation within 'shiny' application. also possible apply multiple event listeners single animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"","code":"lottie_addEventListener(   animation,   event,   target,   ...,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"animation 'Lottie' animation object created lottie_animation function name. event event listen (e.g. \"mouseenter\", \"mouseleave\" etc.). target target event listener, either \"animation\" \"container\". ... Additional optional event listener properties, including: state character string corresponding animation state (either \"play\", \"pause\", \"stop\"). loop Logical value indicating whether animation loop. speed numeric specifying desired animation speed. direction Either 1 forward playback -1 reverse playback. setSubFrame logical value specifying whether 'Lottie' animation loop (TRUE) (FALSE). playSegments numeric vector list numeric vectors indicating segment(s) played. forceFlag Logical value indicating whether force animation play specified segments immediately (TRUE) wait current animation completes (FALSE). custom_js Custom 'JavaScript' execute event triggered. functionName Optional name event handler function (can useful referencing event listener, lottie_removeEventListener). session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"used within reactive context, function execute necessary 'JavaScript'. Otherwise, return script tag containing 'JavaScript'.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"function several usage options: Supplying animation object created lottie_animation function, placing resultant list object 'shiny' UI. Outside reactive context, supplying name animation placing resultant script object 'shiny' UI. Within reactive context, supplying name animation. run within reactive context, sends custom session message \"lottie_js_runJS\" containing function arguments. Target Options \"animation\": Attaches event listener directly 'Lottie' animation instance. necessary using Lottie-specific event (e.g. \"onComplete\"). See https://airbnb.io/lottie/#/web details. \"container\": Attaches event listener container div 'Lottie' animation. used using generic HTML event, \"mouseenter\" \"mouseleave\".","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"Using custom_js argument, possible assign 'shiny' input values event triggered, see lottie_removeEventListener example.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_addEventListener.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Event Listener to 'Lottie' Animation — lottie_addEventListener","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   # Create an 'animation' event listener that prints a message to the   # browser console after each loop   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) |>   lottie_addEventListener(     event = \"loopComplete\",     target = \"animation\",     custom_js = \"console.log('Animation Complete!');\"   ),   # Create a 'container' event listener that plays an animation when   # hovering over the button, and another that pauses the animation   # when hovering stops   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"button\",     width = \"200px\",     height = \"100px\",     loop = TRUE,     autoplay = FALSE,   ) |> lottie_button(inputId = \"lottieButton\", label = \"Lottie\",                      height = \"200px\", width = \"200px\") |>     lottie_addEventListener(\"mouseenter\", \"container\", state = \"play\") |>     lottie_addEventListener(\"mouseleave\", \"container\", state = \"pause\") )  server <- function(input, output, session) {}  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"Generates 'Lottie' animation use within 'shiny' application.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"","code":"lottie_animation(   path,   name,   loop = TRUE,   autoplay = TRUE,   renderer = \"svg\",   width = \"400px\",   height = \"400px\",   ...,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"path Either URL local file path (see Note). name character string specifying name give animation. loop Logical indicating whether animation loop. autoplay Logical indicating whether animation autoplay. renderer renderer use animation, either \"svg\", \"canvas\", \"html\". width width animation container. validated using validateCssUnit. height height animation container. validated using validateCssUnit. ... Additional animation options, including: speed numeric specifying desired animation speed. direction Either 1 forward playback -1 reverse playback. setSubFrame logical value specifying whether 'Lottie' animation loop (TRUE) (FALSE). playSegments numeric vector list numeric vectors indicating segment(s) played. forceFlag Logical value indicating whether force animation play specified segments immediately (TRUE) wait current animation completes (FALSE). session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"list containing following elements: div HTML div element serving 'Lottie' animation container. script script tag containing 'JavaScript' initialise 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"using local file path, may need use addResourcePath.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate 'Lottie' Animation for a 'shiny' application — lottie_animation","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) )  server <- function(input, output, session) {}  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"'Lottie' Animation Methods — lottie_animation_methods","title":"'Lottie' Animation Methods — lottie_animation_methods","text":"functions provide methods modifying playback options existing 'Lottie' animations.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_animation_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'Lottie' Animation Methods — lottie_animation_methods","text":"lottie_setSpeed: Set speed animation. lottie_setDirection: Set direction animation. lottie_setLoop: Set whether animation loop. lottie_goToAndStop: Move specific frame time stop. lottie_goToAndPlay: Move specific frame time play. lottie_playSegments: Play specific segments animation. lottie_setSubframe: Set whether use subframes rendering animation. lottie_destroy: Destroy specified animation instance.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a 'Lottie' Animation to a Button — lottie_button","title":"Convert a 'Lottie' Animation to a Button — lottie_button","text":"Wraps 'Lottie' animation within button element use 'shiny' applications.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a 'Lottie' Animation to a Button — lottie_button","text":"","code":"lottie_button(   animation,   inputId,   label = NULL,   width = NULL,   height = NULL,   ... )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a 'Lottie' Animation to a Button — lottie_button","text":"animation 'Lottie' animation created lottie_animation. inputId 'shiny' input slot used access value. label Optional text label display animation inside button. width Width button. validated using validateCssUnit. height Height button. validated using validateCssUnit. ... Additional named attributes pass button element. behaviour actionButton.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a 'Lottie' Animation to a Button — lottie_button","text":"HTML button element enclosing animation input object.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a 'Lottie' Animation to a Button — lottie_button","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\",     height = \"100px\",     width = \"100px\"   ) |> lottie_button(inputId = \"my_button\") )  server <- function(input, output, session) {   observeEvent(input$my_button, {     print(\"Button pressed\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a 'Lottie' Method — lottie_callMethod","title":"Call a 'Lottie' Method — lottie_callMethod","text":"Call method specific 'Lottie' animation 'Lottie' animations.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a 'Lottie' Method — lottie_callMethod","text":"","code":"lottie_callMethod(   name = \"all\",   method,   argument = \"\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a 'Lottie' Method — lottie_callMethod","text":"name character string specifying name 'Lottie' animation query. default \"\" retrieve specified property 'Lottie' animations within 'shiny' application. method character string specifying name method call. argument character string specifying optional arguments pass method. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a 'Lottie' Method — lottie_callMethod","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call a 'Lottie' Method — lottie_callMethod","text":"Sends custom session message \"lottie_js_callMethod\" containing function arguments.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_callMethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call a 'Lottie' Method — lottie_callMethod","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"callMethod\", \"Call Method (Reverse Direction)\") )  server <- function(input, output, session) {   observeEvent(input$callMethod, {     lottie_callMethod(name = \"my_animation\", method = \"setDirection\", argument = \"-1\")   }) } shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":null,"dir":"Reference","previous_headings":"","what":"Destroy a 'Lottie' Animation — lottie_destroy","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"Permanently destroy specific 'Lottie' animation 'Lottie' animations.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"","code":"lottie_destroy(name = \"all\", session = shiny::getDefaultReactiveDomain())"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"name character string specifying name 'Lottie' animation destroy. default \"\" destroy animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"Sends custom session message \"lottie_js_destroy\" containing function arguments.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_destroy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Destroy a 'Lottie' Animation — lottie_destroy","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"destroy\", \"Destroy Animation\") )  server <- function(input, output, session) {   observeEvent(input$destroy, {     lottie_destroy(\"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Property of a 'Lottie' Animation — lottie_getProperty","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"Get property specific 'Lottie' animation 'Lottie' animations.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"","code":"lottie_getProperty(   property,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"property character string specifying name property retrieve. name character string specifying name 'Lottie' animation query. default \"\" retrieve specified property animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"return value(s) can retrieved within reactive context accessing input object 'shiny' session, value assigned property name. example, accessing playCount property, return value can retrieved via input$playCount. name = \"\" specified, return object list, named elements corresponding animation names.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"Sends custom session message \"lottie_js_getProperty\" containing function arguments.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_getProperty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Property of a 'Lottie' Animation — lottie_getProperty","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"getProperty\", \"Update Play Count\"),   textOutput(\"playCountOutput\") )  server <- function(input, output, session) {   observeEvent(input$getProperty, {     lottie_getProperty(name = \"my_animation\", property = \"playCount\")   })    observe({     req(input$playCount)     output$playCountOutput <- renderText({       paste(\"Play Count:\", input$playCount)     })   }) }   shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Navigate to a Specific Animation Frame — lottie_navigate_frame","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"Navigate specific frame time either stop play animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"","code":"lottie_goToAndStop(   value,   isFrame = TRUE,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )  lottie_goToAndPlay(   value,   isFrame = TRUE,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"value numeric value specifying frame time go . isFrame logical value indicating whether value frame number (TRUE) time (FALSE). name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"functions called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"lottie_goToAndStop moves animation specific frame time, stops . Sends custom session message \"lottie_js_goToAndStop\" containing function arguments. lottie_goToAndPlay moves animation specific frame time, continues playback. Sends custom session message \"lottie_js_goToAndPlay\" containing function arguments.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_navigate_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Navigate to a Specific Animation Frame — lottie_navigate_frame","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"goToAndStop\", \"Go To Frame 10 And Stop\"),   actionButton(\"goToAndPlay\", \"Go To Frame 10 And Play\") )  server <- function(input, output, session) {   observeEvent(input$goToAndStop, {     lottie_goToAndStop(value = 10, isFrame = TRUE, name = \"my_animation\")   })    observeEvent(input$goToAndPlay, {     lottie_goToAndPlay(value = 10, isFrame = TRUE, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"Play specific segments 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"","code":"lottie_playSegments(   segments,   forceFlag = TRUE,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"segments numeric vector list numeric vectors indicating segment(s) played. forceFlag Logical value indicating whether force animation play specified segments immediately (TRUE) wait current animation completes (FALSE). name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"Sends custom session message \"lottie_js_playSegments\" containing function arguments.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"play single segment, segments numeric vector length 2 represents start end frames. play multiple segments, provide list containing multiple numeric vectors length 2. Note animation set looped, final segment repeated.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playSegments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Play Specific Segments of a 'Lottie' Animation — lottie_playSegments","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\",     loop = FALSE,     speed = 0.5 # Slowed to make effects clearer   ),   actionButton(\"playSegments1\", \"Play Frames 1 - 10\"),   # Will not work if animation has less than 40 frames   actionButton(\"playSegments2\", \"Play Frames 1 - 10 and 30 - 40\") )  server <- function(input, output, session) {   observeEvent(input$playSegments1, {     lottie_playSegments(segments = c(1, 10), forceFlag = TRUE,       name = \"my_animation\")   })    observeEvent(input$playSegments2, {     lottie_playSegments(segments = list(c(1, 10), c(30, 40)),       forceFlag = TRUE, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Playback of 'Lottie' Animations — lottie_playback_controls","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"Control playback 'Lottie' animations within 'shiny' application.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"","code":"lottie_play(name = \"all\", session = shiny::getDefaultReactiveDomain())  lottie_pause(name = \"all\", session = shiny::getDefaultReactiveDomain())  lottie_stop(name = \"all\", session = shiny::getDefaultReactiveDomain())"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"functions called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"function sends corresponding custom session message containing function arguments: Play: \"lottie_js_play\" Pause: \"lottie_js_pause\" Stop: \"lottie_js_stop\"","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_playback_controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control Playback of 'Lottie' Animations — lottie_playback_controls","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"play\", \"Play Animation\"),   actionButton(\"pause\", \"Pause Animation\"),   actionButton(\"stop\", \"Stop Animation\") )  server <- function(input, output, session) {   observeEvent(input$play, {     lottie_play(name = \"my_animation\")   })    observeEvent(input$pause, {     lottie_pause(name = \"my_animation\")   })    observeEvent(input$stop, {     lottie_stop(name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"Removes event listener 'Lottie' animation within 'shiny' application.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"","code":"lottie_removeEventListener(   name,   event,   target,   functionName = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"name character string specifying name 'Lottie' animation. event event listen (e.g. \"mouseenter\", \"mouseleave\" etc.). target target event listener, either \"animation\" \"container\". functionName Optional name event handler function remove. used functionName specified calling lottie_addEventListener. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"run within reactive context, sends custom session message \"lottie_js_runJS\" containing function arguments.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_removeEventListener.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Event Listener from 'Lottie' Animation — lottie_removeEventListener","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   # Create an 'animation' event that updates the 'playCount' input value   # value after each loop   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ) |>     lottie_addEventListener(       event = \"loopComplete\",       target = \"animation\",       custom_js = \"Shiny.setInputValue('playCount',       lottieInstances.my_animation.playCount, {priority: 'event'});\"     ),   actionButton(\"removeEventListener\", \"Remove Event Listener\") )  server <- function(input, output, session) {   # Notifications demonstrate that eventListener is active   observeEvent(input$playCount, {     showNotification(paste(\"Animation played\", input$playCount, \"times\"), duration = 1)   })    # Removing the event listener ceases the notifications   observeEvent(input$removeEventListener, {     lottie_removeEventListener(name = \"my_animation\", event = \"loopComplete\",                                target = \"animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust 'Lottie' Animation Direction — lottie_setDirection","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"Adjust playback direction existing 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"","code":"lottie_setDirection(   direction = 1,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"direction Either 1 forward playback -1 reverse playback. name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"Sends custom session message \"lottie_js_setDirection\" containing function arguments.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setDirection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust 'Lottie' Animation Direction — lottie_setDirection","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"forwards\", \"Play Forwards\"),   actionButton(\"backwards\", \"Play Backwards\") )  server <- function(input, output, session) {   observeEvent(input$forwards, {     lottie_setDirection(direction = 1, name = \"my_animation\")   })    observeEvent(input$backwards, {     lottie_setDirection(direction = -1, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust 'Lottie' Animation Looping — lottie_setLoop","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"Adjust looping behaviour 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"","code":"lottie_setLoop(flag, name = \"all\", session = shiny::getDefaultReactiveDomain())"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"flag Logical value specifying whether 'Lottie' animation loop (TRUE) (FALSE). name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"Sends custom session message \"lottie_js_setLoop\" containing function arguments.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setLoop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust 'Lottie' Animation Looping — lottie_setLoop","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"play\", \"Play\"),   actionButton(\"loopOn\", \"Loop On\"),   actionButton(\"loopOff\", \"Loop Off\") )  server <- function(input, output, session) {   observeEvent(input$play, {     # Non-looped animations can not be resumed without first being stopped     lottie_stop(name = \"my_animation\")     lottie_play(name = \"my_animation\")   })    observeEvent(input$loopOn, {     lottie_setLoop(flag = TRUE, name = \"my_animation\")   })    observeEvent(input$loopOff, {     lottie_setLoop(flag = FALSE, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"Adjust speed existing 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"","code":"lottie_setSpeed(   speed = 1,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"speed numeric specifying desired animation speed. name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"Sends custom session message \"lottie_js_setSpeed\" containing function arguments.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"speed 1 apply default animation speed. Use value 0 1 slower animation speed. Applying negative speed also reverse playback direction.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSpeed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust 'Lottie' Animation Speed — lottie_setSpeed","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   numericInput(\"speed\", \"Speed\", value = 1),   actionButton(\"updateSpeed\", \"Update Speed\") )  server <- function(input, output, session) {   observeEvent(input$updateSpeed, {     lottie_setSpeed(speed = input$speed, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"Adjust subframe rendering 'Lottie' animation.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"","code":"lottie_setSubframe(   flag,   name = \"all\",   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"flag logical value specifying whether 'Lottie' animation use subframe rendering (TRUE) (FALSE). name character string specifying name 'Lottie' animation control. default \"\" control animations within 'shiny' application. session 'shiny' session object. Defaults current reactive domain.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"function called side effect, return value.","code":""},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"Sends custom session message \"lottie_js_setSubframe\" containing function arguments.","code":""},{"path":[]},{"path":"https://camhowitt.github.io/shinyLottie/reference/lottie_setSubframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set 'Lottie' Animation Subframe Rendering — lottie_setSubframe","text":"","code":"if (FALSE) { # interactive() library(shiny) library(shinyLottie)  ui <- fluidPage(   include_lottie(),   lottie_animation(     path = \"shinyLottie/example.json\",     name = \"my_animation\"   ),   actionButton(\"subframeOn\", \"Subframe On\"),   actionButton(\"subframeOff\", \"Subframe Off\") )  server <- function(input, output, session) {   observeEvent(input$subframeOn, {     lottie_setSubframe(flag = TRUE, name = \"my_animation\")   })    observeEvent(input$subframeOff, {     lottie_setSubframe(flag = FALSE, name = \"my_animation\")   }) }  shinyApp(ui, server) }"},{"path":"https://camhowitt.github.io/shinyLottie/news/index.html","id":"shinylottie-100","dir":"Changelog","previous_headings":"","what":"shinyLottie 1.0.0","title":"shinyLottie 1.0.0","text":"CRAN release: 2024-06-21 Initial CRAN submission.","code":""}]
